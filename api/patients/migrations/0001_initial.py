# Generated by Django 5.1.7 on 2025-06-27 11:54

import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Male'), (1, 'Female'), (2, 'Other')], null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('marital_status', models.IntegerField(blank=True, choices=[(0, 'Married'), (1, 'Single'), (2, 'Divorced'), (3, 'Widowed'), (4, 'Separated'), (5, 'Other')], null=True)),
                ('sex_assigned_at_birth', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='PatientMedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_main_record', models.BooleanField(default=False)),
                ('appointment_uuid', models.UUIDField(blank=True, help_text='UUID of the appointment to update the seperate fields consistently.', null=True, unique=True)),
                ('iodine_allergy', models.JSONField(default=dict, help_text="Iodine allergy information: {'is_iodine_allergic':bool}")),
                ('allergies', models.JSONField(default=dict, help_text="All allergies: [{'name':str}, ...]")),
                ('medications', models.JSONField(default=dict, help_text="All medications: [{'name':str}, ...]")),
                ('medical_histories', models.JSONField(default=dict, help_text="All medical histories: [{'name':str}, ...]")),
                ('surgical_histories', models.JSONField(default=dict, help_text="All surgical histories: [{'name':str}, ...]")),
                ('cancer_history', models.JSONField(default=dict, help_text="Patient's Cancer History: [{'cancer_type':choice, 'year_of_diagnosis':year, 'treatment_received':[{'name':choice},...],},]")),
                ('addiction_history', models.JSONField(default=dict, help_text="Patient's Addiction History: [{'addiction_type':choice, 'total_years':str}, ...] | Exactly two addiction types are required (one for smoking and one for alcohol).")),
                ('care_providers', models.JSONField(default=dict, help_text="Patient Care Providers: [{'name':str, 'contact_number':phone, 'type': choice}] | Maximum 2 care providers are allowed | one for type 1 and second for type 2")),
            ],
            options={
                'verbose_name': 'Patient Medical Record',
                'verbose_name_plural': 'Patient Medical Records',
                'db_table': 'patient_medical_record',
            },
        ),
    ]
