# Generated by Django 5.1.7 on 2025-05-12 15:58

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddictionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('addiction_type', models.IntegerField(blank=True, choices=[(0, 'Smoking'), (1, 'Alcohol')])),
                ('total_years', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Addiction History',
                'verbose_name_plural': 'Addiction Histories',
                'db_table': 'addiction_history',
            },
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Allergy',
                'verbose_name_plural': 'Allergies',
                'db_table': 'allergy',
            },
        ),
        migrations.CreateModel(
            name='CancerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Cancer Type',
                'verbose_name_plural': 'Cancer Types',
                'db_table': 'cancer_type',
            },
        ),
        migrations.CreateModel(
            name='CareProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('type', models.IntegerField(verbose_name=[(0, 'Primary Physician'), (1, 'Pharmacist')])),
            ],
            options={
                'verbose_name': 'Care Provider',
                'verbose_name_plural': 'Care Providers',
                'db_table': 'care_provider',
            },
        ),
        migrations.CreateModel(
            name='IodineAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_iodine_allergic', models.IntegerField(choices=[(0, 'No'), (1, 'Yes'), (2, 'Unknown')])),
            ],
            options={
                'verbose_name': 'Iodine Allergy',
                'verbose_name_plural': 'Iodine Allergies',
                'db_table': 'iodine_allergy',
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medical_condition', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Medical History',
                'verbose_name_plural': 'Medical Histories',
                'db_table': 'medical_history',
            },
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Medication',
                'verbose_name_plural': 'Medications',
                'db_table': 'medication',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Male'), (1, 'Female'), (2, 'Non-binary'), (3, 'Prefer not to say')], null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('visit_type', models.IntegerField(blank=True, choices=[(0, 'Cancer Screening'), (1, 'Cancer Treatment Second Opinion'), (2, 'Cancer Surveillance'), (3, 'Oncology Nurse Support'), (4, 'Follow-Up Visit'), (5, 'Initial Consultation')], null=True)),
                ('marital_status', models.IntegerField(blank=True, choices=[(0, 'Married'), (1, 'Single'), (2, 'Divorced'), (3, 'Widowed'), (4, 'Separated'), (5, 'Other')], null=True)),
                ('sex_assigned_at_birth', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patient',
            },
        ),
        migrations.CreateModel(
            name='PatientAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Patient Allergy',
                'verbose_name_plural': 'Patient Allergies',
                'db_table': 'patient_allergy',
            },
        ),
        migrations.CreateModel(
            name='PatientCareProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Patient Care Provider',
                'verbose_name_plural': 'Patient Care Providers',
                'db_table': 'patient_care_provider',
            },
        ),
        migrations.CreateModel(
            name='PatientMedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Patient Medical History',
                'verbose_name_plural': 'Patient Medical Histories',
                'db_table': 'patient_medical_history',
            },
        ),
        migrations.CreateModel(
            name='PatientMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Patient Medication',
                'verbose_name_plural': 'Patient Medications',
                'db_table': 'patient_medication',
            },
        ),
        migrations.CreateModel(
            name='PatientSurgicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Patient Surgical History',
                'verbose_name_plural': 'Patient Surgical Histories',
                'db_table': 'patient_surgical_history',
            },
        ),
        migrations.CreateModel(
            name='SurgicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('surgical_condition', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Surgical History',
                'verbose_name_plural': 'Surgical Histories',
                'db_table': 'surgical_history',
            },
        ),
        migrations.CreateModel(
            name='TreatmentRecieved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.IntegerField(blank=True, choices=[(0, 'Chemotherapy'), (1, 'Radiation Therapy'), (2, 'Surgery'), (3, 'Other')])),
            ],
            options={
                'verbose_name': 'Treatment Recieved',
                'verbose_name_plural': 'Treatment Recieveds',
                'db_table': 'treatment_recieved',
            },
        ),
        migrations.CreateModel(
            name='CancerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year_of_diagnosis', models.PositiveIntegerField()),
                ('cancer_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='cancer_type', to='patients.cancertype')),
            ],
            options={
                'verbose_name': 'Cancer History',
                'verbose_name_plural': 'Cancer Histories',
                'db_table': 'cancer_history',
            },
        ),
    ]
